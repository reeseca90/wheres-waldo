{"version":3,"sources":["blank.js","hockey.jpg","Hockey.js","Leader.js","App.js","Navbar.js","index.js"],"names":["Blank","props","itemsToFind","useEffect","getItemsToFind","id","Hockey","popupItemClick","e","popupCallback","target","startTimeCallback","Date","now","className","src","hockeyImg","alt","onClick","coordCallback","x","nativeEvent","offsetX","y","offsetY","pageX","pageY","map","item","waldo","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Leader","useState","leaders","setLeaders","a","docRef","doc","getDoc","docSnap","data","getData","sort","b","time","element","name","App","firstRender","useRef","canWinGame","setName","setX","setY","setPageX","setPageY","items","setItems","itemsFound","setItemsFound","startTime","setStartTime","setTime","current","popupMenu","document","getElementById","style","left","top","displayMenu","getItemsToFindCallback","childData","length","checkRange","X","Y","querySelector","to","htmlFor","type","onChange","value","required","exact","path","component","preventDefault","scoreRef","updateDoc","arrayUnion","Navbar","ReactDOM","render","StrictMode"],"mappings":"4SAqBeA,EAnBD,SAACC,GACb,IAAMC,EAAc,GAWpB,OAJAC,qBAAU,WAJRF,EAAMG,eAAeF,KAMpB,IAGD,qBAAKG,GAAG,QAAR,6CCfW,MAA0B,mCC6C1BC,EA1CA,SAACL,GACd,IAAMC,EAAc,CAAC,SAAU,SAAU,OAAQ,UAMjD,IAIMK,EAAiB,SAACC,GACtBP,EAAMQ,cAAcD,EAAEE,OAAOL,KAQ/B,OALAF,qBAAU,WACRF,EAAMU,kBAAkBC,KAAKC,OAZ7BZ,EAAMG,eAAeF,KAcpB,IAGD,sBAAKY,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAhB,4BACA,sBAAKA,UAAU,aAAf,UACE,sBAAMT,GAAG,SAASS,UAAU,WAA5B,oBACA,sBAAMT,GAAG,SAASS,UAAU,WAA5B,oBACA,sBAAMT,GAAG,OAAOS,UAAU,WAA1B,kBACA,sBAAMT,GAAG,SAASS,UAAU,WAA5B,uBAEF,qBAAKC,IAAKC,EAAWC,IAAI,mBAAmBC,QAtB9B,SAACV,GACjBP,EAAMkB,cAAc,CAACC,EAAGZ,EAAEa,YAAYC,QAASC,EAAGf,EAAEa,YAAYG,QAASC,MAAOjB,EAAEiB,MAAOC,MAAMlB,EAAEkB,WAuB/F,qBAAKrB,GAAG,YAAYS,UAAU,YAA9B,SACI,6BACGZ,EAAYyB,KAAI,SAACC,GAChB,OAAO,oBAAIvB,GAAIuB,EAAMV,QAASX,EAAvB,SAAwCqB,e,gBCxBvDC,EAAQC,YATS,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAIHC,EAAKC,YAAaT,GAkCTU,EAhCA,WACb,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KADmB,4CAGnB,8BAAAC,EAAA,6DACQC,EAASC,YAAIR,EAAI,SAAU,eADnC,SAEwBS,YAAOF,GAF/B,OAEQG,EAFR,OAGEL,EAAWK,EAAQC,OAAOP,SAH5B,4CAHmB,sBAanB,OAJAtC,qBAAU,YATS,mCAUjB8C,KACC,IAGD,8BACE,qBAAI5C,GAAG,cAAP,yBACGoC,EACES,MAAK,SAACP,EAAGQ,GACR,OAAOR,EAAES,KAAOD,EAAEC,QAEnBzB,KAAI,SAAC0B,GACJ,OAAO,qBAAIhD,GAAIgD,EAAQC,KAAyBxC,UAAU,WAAnD,UACL,sBAAMA,UAAU,SAAhB,SAA0BuC,EAAQC,OAClC,uBAAMxC,UAAU,SAAhB,UAA0BuC,EAAQD,KAAK,IAAvC,gBAFgCC,EAAQD,eCnBhDvB,EAAQC,YATS,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAIHC,EAAKC,YAAaT,GAgJT0B,EA9IH,WAEV,IAAMC,EAAcC,kBAAO,GACrBC,EAAaD,kBAAO,GAE1B,EAAwBjB,mBAAS,IAAjC,mBAAOc,EAAP,KAAaK,EAAb,KACA,EAAkBnB,mBAAS,GAA3B,mBAAOpB,EAAP,KAAUwC,EAAV,KACA,EAAkBpB,mBAAS,GAA3B,mBAAOjB,EAAP,KAAUsC,EAAV,KACA,EAA0BrB,mBAAS,GAAnC,mBAAOf,EAAP,KAAcqC,EAAd,KACA,EAA0BtB,mBAAS,GAAnC,mBAAOd,EAAP,KAAcqC,EAAd,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAoCzB,mBAAS,GAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAAkC3B,mBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KACA,EAAwB7B,mBAAS,GAAjC,mBAAOY,EAAP,KAAakB,EAAb,KA0BAnE,qBAAU,WACJqD,EAAYe,QACdf,EAAYe,SAAU,EAVN,WAClB,IAAMC,EAAYC,SAASC,eAAe,aAC1CF,EAAUG,MAAMC,KAAhB,UAA0BnD,EAA1B,MACA+C,EAAUG,MAAME,IAAhB,UAAyBnD,EAAzB,MACA8C,EAAU1D,UAAY,YASpBgE,KAED,CAAC1D,EAAGG,EAAGE,EAAOC,IAGjB,IAAMqD,EAAyB,SAACC,GAC9Bf,EAAS,YAAIe,KAGf7E,qBAAU,WACRgE,EAAc,GACOM,SAASC,eAAe,gBAChC5D,UAAY,cACxB,CAACkD,IAGJ7D,qBAAU,YACmB,IAAvBuD,EAAWa,QAITL,IAAeF,EAAMiB,QAA2B,IAAjBjB,EAAMiB,SAClBR,SAASC,eAAe,gBAChC5D,UAAY,YACzBwD,EAAQ1D,KAAKC,MAAQuD,IANvBV,EAAWa,SAAU,IAStB,CAACL,EAAYF,EAAMiB,SAEtB,IAQMxE,EAAa,uCAAG,WAAOuE,GAAP,mBAAArC,EAAA,6DAEdC,EAASC,YAAIR,EAAI,SAAU2C,GAFb,SAGElC,YAAOF,GAHT,cAGdG,EAHc,OAMdmC,EANc,+BAAAvC,EAAA,MAMD,sBAAAA,EAAA,sDACbvB,GAAK2B,EAAQC,OAAOmC,EAAE,IAAM/D,GAAK2B,EAAQC,OAAOmC,EAAE,IAAM5D,GAAKwB,EAAQC,OAAOoC,EAAE,IAAM7D,GAAKwB,EAAQC,OAAOoC,EAAE,KAExFX,SAASY,cAAT,kBAAkCL,EAAlC,MACRlE,UAAY,QACxBqD,EAAcD,EAAa,IALZ,2CANC,8DAedgB,IAfc,OAkBFT,SAASC,eAAe,aAChC5D,UAAY,YAnBF,2CAAH,sDAsBnB,OACE,sBAAKA,UAAU,MAAf,UACE,yBAAST,GAAG,YAAZ,SACE,cAAC,IAAD,UACE,sBAAKA,GAAG,cAAR,UACE,sBAAKA,GAAG,aAAR,UACE,cAAC,IAAD,CAAMiF,GAAG,IAAIxE,UAAU,OAAvB,kBACA,cAAC,IAAD,CAAMwE,GAAG,UAAUxE,UAAU,OAA7B,yBACA,cAAC,IAAD,CAAMwE,GAAG,UAAUxE,UAAU,OAA7B,6BAGF,yBAAST,GAAG,SAAZ,SACE,iCACE,uBAAOkF,QAAQ,OAAf,+BACA,uBAAOjC,KAAK,OAAOkC,KAAK,OAAOC,SAtG7B,SAACjF,GACfmD,EAAQnD,EAAEE,OAAOgF,QAqG6CA,MAAOpC,EAAMqC,UAAQ,SAI3E,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAOzF,eAAgB2E,MAEzB,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,UAAUC,UAAWvD,IACvC,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CAAQ1E,cAvGA,SAAC6D,GACrBpB,EAAKoB,EAAU5D,GACfyC,EAAKmB,EAAUzD,GACfuC,EAASkB,EAAUvD,OACnBsC,EAASiB,EAAUtD,QAmG+Bf,kBA5G1B,SAACqE,GACzBX,EAAaW,IA2G2E5E,eAAgB2E,EAAwBtE,cAAeA,gBAO7I,0BAASJ,GAAG,eAAeS,UAAU,YAArC,UACE,yCACA,wBAAQI,QA/DM,SAACV,GACnBA,EAAEuF,iBACF,IAAMC,EAAWnD,YAAIR,EAAI,SAAU,eACnC4D,YAAUD,EAAU,CAAEvD,QAASyD,YAAW,CAAC5C,KAAK,GAAD,OAAKA,GAAQF,KAAK,GAAD,OAAKA,OAChDqB,SAASC,eAAe,gBAChC5D,UAAY,aA0DrB,qCC/IOqF,G,MAXA,WAEb,OACE,iCACE,sBAAK9F,GAAG,UAAR,UACE,mDAA4B,sBAAMS,UAAU,YAAhB,iDCFpCsF,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF7B,SAASC,eAAe,W","file":"static/js/main.9c547baf.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Blank = (props) => {\n  const itemsToFind = [];\n\n  function itemList() {\n    props.getItemsToFind(itemsToFind);\n  }\n  \n  // passes blank array to App when user clicks home button\n  useEffect(() => {\n    itemList();\n  }, []);\n\n  return (\n    <div id=\"blank\">\n      Select an image above to begin\n    </div>\n  );\n};\n\nexport default Blank;","export default __webpack_public_path__ + \"static/media/hockey.e85a0811.jpg\";","import React, { useEffect } from \"react\";\nimport hockeyImg from './hockey.jpg';\n\nconst Hockey = (props) => {\n  const itemsToFind = ['helmet', 'gloves', 'puck', 'skates'];\n\n  function itemList() {\n    props.getItemsToFind(itemsToFind);\n  }\n\n  const getCoords = (e) => {  \n    props.coordCallback({x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY, pageX: e.pageX, pageY:e.pageY});\n  }\n\n  const popupItemClick = (e) => {\n    props.popupCallback(e.target.id);\n  }\n\n  useEffect(() => {\n    props.startTimeCallback(Date.now());\n    itemList();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <span className=\"whatToFind\">Items to find:</span>\n      <div className=\"whatToFind\">\n        <span id=\"helmet\" className=\"notFound\">Helmet</span>\n        <span id=\"gloves\" className=\"notFound\">Gloves</span>\n        <span id=\"puck\" className=\"notFound\">Puck</span>\n        <span id=\"skates\" className=\"notFound\">Skates</span>\n      </div>\n      <img src={hockeyImg} alt=\"hockey equipment\" onClick={getCoords} />\n\n      <div id=\"popupMenu\" className=\"popupHide\">\n          <ul>\n            {itemsToFind.map((item) => {\n              return <li id={item} onClick={popupItemClick}>{item}</li>\n            })}\n          </ul>\n        </div>\n    </div>\n  );\n};\n\nexport default Hockey;","import React, { useState, useEffect } from \"react\";\nimport { doc, getDoc, getFirestore} from \"firebase/firestore\";\nimport { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDd927D5eN1SDSpGBjk1RBY0_9Jra4G1QI\",\n  authDomain: \"wheres-waldo-4c7b9.firebaseapp.com\",\n  projectId: \"wheres-waldo-4c7b9\",\n  storageBucket: \"wheres-waldo-4c7b9.appspot.com\",\n  messagingSenderId: \"373337422993\",\n  appId: \"1:373337422993:web:fa89b0ad66b018f7689330\"\n};\n\nconst waldo = initializeApp(firebaseConfig);\nconst db = getFirestore(waldo);\n\nconst Leader = () => {\n  const [leaders, setLeaders] = useState([]);\n\n  async function getData() {\n    const docRef = doc(db, 'hockey', 'leaderboard');\n    const docSnap = await getDoc(docRef);\n    setLeaders(docSnap.data().leaders);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <ul id=\"leaderBoard\">Leaderboard:\n        {leaders\n          .sort((a, b) => {\n            return a.time - b.time;\n          })\n          .map((element) => {\n            return <li id={element.name} key={element.time} className=\"leaderLI\">\n              <span className=\"spanLI\">{element.name}</span>\n              <span className=\"spanLI\">{element.time/1000} seconds</span>\n            </li>\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default Leader;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Blank from './blank';\nimport Hockey from './Hockey';\nimport Leader from './Leader';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, getDoc, doc, updateDoc, arrayUnion } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDd927D5eN1SDSpGBjk1RBY0_9Jra4G1QI\",\n  authDomain: \"wheres-waldo-4c7b9.firebaseapp.com\",\n  projectId: \"wheres-waldo-4c7b9\",\n  storageBucket: \"wheres-waldo-4c7b9.appspot.com\",\n  messagingSenderId: \"373337422993\",\n  appId: \"1:373337422993:web:fa89b0ad66b018f7689330\"\n};\n\nconst waldo = initializeApp(firebaseConfig);\nconst db = getFirestore(waldo);\n\nconst App = () => {\n  // used to not render popup menu when setting initial coordinates\n  const firstRender = useRef(true);\n  const canWinGame = useRef(false);\n\n  const [name, setName] = useState('');\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [pageX, setPageX] = useState(0);\n  const [pageY, setPageY] = useState(0);\n  const [items, setItems] = useState([]);\n  const [itemsFound, setItemsFound] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [time, setTime] = useState(0);\n\n  const getName = (e) => {\n    setName(e.target.value);\n  }\n\n  const startTimeCallback = (childData) => {\n    setStartTime(childData);\n  }\n\n  // this sets the coords for the popup menu and the coords for the clicked object on picture\n  const coordCallback = (childData) => {\n    setX(childData.x);\n    setY(childData.y);\n    setPageX(childData.pageX);\n    setPageY(childData.pageY);\n  }\n\n  const displayMenu = () => {\n    const popupMenu = document.getElementById('popupMenu');\n    popupMenu.style.left = `${pageX}px`;\n    popupMenu.style.top = `${pageY}px`;\n    popupMenu.className = 'popupShow';\n  }\n\n  // this displays the popup menu when the coords from coordCallback are changed\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } else {\n      displayMenu();\n    }\n  }, [x, y, pageX, pageY]);\n\n  // get items array from child for checking win conditions\n  const getItemsToFindCallback = (childData) => {\n    setItems([...childData]);\n  }\n  // set items found to 0 every time items array is changed\n  useEffect(() => {\n    setItemsFound(0);\n    const gameOverArea = document.getElementById('gameOverArea');\n    gameOverArea.className = 'popupHide';\n  }, [items]);\n\n  // game win logic\n  useEffect(() => {\n    if (canWinGame.current === false) {\n      canWinGame.current = true;\n      return;\n    } else {\n      if (itemsFound === items.length && items.length !== 0) {\n        const gameOverArea = document.getElementById('gameOverArea');\n        gameOverArea.className = 'popupShow';\n        setTime(Date.now() - startTime);\n      }\n    }\n  }, [itemsFound, items.length])\n\n  const submitScore = (e) => {\n    e.preventDefault();\n    const scoreRef = doc(db, 'hockey', 'leaderboard');\n    updateDoc(scoreRef, { leaders: arrayUnion({name: `${name}`, time: `${time}`})});\n    const gameOverArea = document.getElementById('gameOverArea');\n    gameOverArea.className = 'popupHide';\n  }\n\n  const popupCallback = async (childData) => {\n    // get coordinates of item from backend\n    const docRef = doc(db, 'hockey', childData);\n    const docSnap = await getDoc(docRef);\n\n    // check if in range\n    const checkRange = async () => {\n      if (x >= docSnap.data().X[0] && x <= docSnap.data().X[1] && y >= docSnap.data().Y[0] && y <= docSnap.data().Y[1]) {\n        // gray out item in list\n        const clickedItem = document.querySelector(`span[id=${childData}]`);\n        clickedItem.className = \"found\";\n        setItemsFound(itemsFound + 1);\n      }\n    }\n\n    await checkRange();\n\n    // hide popup menu\n    const popupMenu = document.getElementById('popupMenu');\n    popupMenu.className = 'popupHide';\n  }\n\n  return (\n    <div className=\"App\">\n      <section id=\"imageArea\">\n        <BrowserRouter>\n          <div id=\"mainContent\">\n            <div id=\"imageLinks\">\n              <Link to=\"/\" className=\"link\">Home</Link>\n              <Link to=\"/leader\" className=\"link\">Leaderboard</Link>\n              <Link to=\"/hockey\" className=\"link\">Hockey Image</Link>\n            </div>\n\n            <section id=\"appNav\">\n              <form>\n                <label htmlFor=\"name\">Enter your name: </label>\n                <input name=\"name\" type=\"text\" onChange={getName} value={name} required/>\n              </form>\n            </section>\n\n            <Switch>\n              <Route exact path=\"/\">\n                <Blank getItemsToFind={getItemsToFindCallback} />\n              </Route>\n              <Route exact path=\"/leader\" component={Leader} />\n              <Route exact path=\"/hockey\">\n                <Hockey coordCallback={coordCallback} startTimeCallback={startTimeCallback} getItemsToFind={getItemsToFindCallback} popupCallback={popupCallback} />\n              </Route>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </section>\n\n      <section id=\"gameOverArea\" className=\"popupHide\">\n        <p>You Win!</p>\n        <button onClick={submitScore}>Submit your time</button>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport './Navbar.css';\n\nconst Navbar = () => {\n\n  return (\n    <header>\n      <div id=\"navLeft\">\n        <span>WHERE IS WALDO?</span><span className=\"smallFont\">but you're not finding waldo</span>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Navbar from './Navbar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}